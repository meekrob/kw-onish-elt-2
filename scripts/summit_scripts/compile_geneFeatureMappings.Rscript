#!/usr/bin/env Rscript
#
## Rscript thisfile.Rscript outfileroot infile1.bed infile2.bed ...
#
library(stringr, quietly=TRUE)
library(ChIPpeakAnno, quietly=TRUE)
library(GenomicRanges, quietly=TRUE)

readBedOrRds <- function(filepath) {
    basepath = dirname(filepath)
    bedfilename <- filepath
    rdsfilename <- str_replace(bedfilename, '.bed', '.rds')
    if (file.exists(rdsfilename)) {
        # load serialized data file
        cat("Loading RDS File", rdsfilename, "\n")
        peaks = readRDS(rdsfilename)
    }
    else {
        # process BED file
        cat("Reading BED File", bedfilename, "\n")
        peak_df = read.table(bedfilename, col.names=c("seqname","start","end"))
        peaks = GenomicRanges::makeGRangesFromDataFrame(peak_df, starts.in.df.are.0based = T)
        # save RDS file
        cat("Saving RDS File", rdsfilename, "\n")
        saveRDS(peaks, rdsfilename)
    }
    return(peaks)
}

# get the directory of the source files, these will be linked across
# volumes (Petalibrary to my project dir)
initial.options <- commandArgs(trailingOnly = FALSE)
file.arg.name <- "--file="
script.name <- sub(file.arg.name, "", initial.options[grep(file.arg.name, initial.options)])
script.basename <- dirname(Sys.readlink(script.name))
print(script.basename)
parent_dir=dirname(script.basename)
srcpath=paste0(parent_dir,"/","getCodingGenes.R")
cat("looking for srcpath=",'"',srcpath,'"',"\n",sep='')
stopifnot( file.exists(srcpath) )
source( srcpath )

args = commandArgs(trailingOnly = T)
outputFileRoot = args[1]

bigtab = c()

for (filepath in args[2:length(args)]) {
    
    peaks = readBedOrRds(filepath)
    ap = getCodingGenes(peaks)
    mapping_breakdown = table(ap$insideFeature)
    for (feature in c('unmapped', 'upstream', 'overlapStart', 'inside', 'includeFeature', 'downstream', 'overlapEnd')) {
        mapping_breakdown[feature] = ifelse(feature %in% names(mapping_breakdown), mapping_breakdown[feature], 0)
    }
    bigtab = rbind(bigtab, mapping_breakdown)
}

outRDSfile = paste(outputFileRoot, ".rds", sep='')
saveRDS(bigtab, outRDSfile)
